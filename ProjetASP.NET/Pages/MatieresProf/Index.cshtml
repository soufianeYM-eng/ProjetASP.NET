@page
@model ProjetASP.NET.Pages.MatieresProf.IndexModel
@{
    ViewData["Title"] = "Index";

    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="border white-background">
    <div class="row">
        <div class="col-6">
            <h2 class="text-white">Matières</h2>
        </div>
        <div class="col-6 text-right">
           
        </div>
    </div>

    <div>
        @if (Model.Elements.Count() == 0)
        {
            <p class="text-danger">Aucune matière n'existe maintenant</p>
        }
        else
        {
            <table class="table text-white">
                <thead>
                    <tr>
                        <th>Id Element</th>
                        <th>Nom</th>
                        <th>Pourcentage</th>
                        <th>Seances</th>
                        <th>Travaux</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Elements)
                    {
                    <tr>
                        <td>@Html.DisplayFor(m => item.IdElement)</td>
                        <td>@Html.DisplayFor(m => item.Nom)</td>
                        <td>@Html.DisplayFor(m => item.pourcentage)</td>

                        <td>
                            <a asp-page="../Seances/Index" asp-route-IdElement="@item.IdElement" style="text-decoration:none;">
                                <i class="fa fa-video"></i> Seances
                            </a>
                        </td>

                        <td>
                            <a asp-page="../TravailPROF/Index" asp-route-IdElement="@item.IdElement" style="text-decoration:none;">
                                <i class="fa fa-book"></i> Travaux
                            </a>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        }


    </div>
</div>


@section Scripts{

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

}